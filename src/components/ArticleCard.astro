---
import type { CategoryId } from '../config/categories';
import { formatPublicationDate } from '../utils/date';
import CategoryBadge from './CategoryBadge.astro';

interface Props {
  article?: {
    data: {
      title: string;
      description: string;
      pubDate: Date;
      author: string;
      image?: string;
      category: CategoryId;
    };
    slug: string;
  };
  title?: string;
  description?: string;
  pubDate?: Date;
  author?: string;
  image?: string;
  category?: CategoryId;
  url?: string;
  class?: string;
}

const { article, title: titleProp, description: descProp, pubDate: dateProp, author: authorProp, image: imageProp, category: categoryProp, url: urlProp, class: classProp } = Astro.props;

// Use either article props or individual props
const title = article?.data?.title || titleProp;
const description = article?.data?.description || descProp;
const pubDate = article?.data?.pubDate || dateProp;
const author = article?.data?.author || authorProp;
const image = article?.data?.image || imageProp;
const category = article?.data?.category || categoryProp;
const url = article ? `/articles/${article.slug}` : urlProp;

const formattedDate = pubDate ? formatPublicationDate(pubDate) : '';

---

<article 
  class={`card hover:shadow-md h-full flex flex-col ${classProp}`}
  data-category={category}
>
  <a href={url} class="block group h-full flex flex-col">
    <!-- Image -->
    <div class="relative h-48 overflow-hidden flex-shrink-0">
      {image ? (
        <img
          src={image}
          alt={title}
          class="w-full h-full object-cover transform group-hover:scale-105 transition-transform duration-300"
          loading="lazy"
        />
      ) : (
        <div class="w-full h-full bg-gray-200 flex items-center justify-center">
          <span class="text-gray-400">Image non disponible</span>
        </div>
      )}
      <!-- Category Badge -->
      {category && (
        <div class="absolute top-4 left-4">
          <CategoryBadge category={category} />
        </div>
      )}
    </div>

    <!-- Content -->
    <div class="p-8 flex flex-col flex-grow">
      <h3 class="text-2xl font-serif font-bold text-gray-900 mb-4 group-hover:text-primary-dark transition-colors duration-200 leading-tight">
        {title}
      </h3>
      {description && (
        <p class="text-lg text-gray-600 mb-6 line-clamp-2 leading-relaxed">
          {description}
        </p>
      )}
      
      <!-- Metadata -->
      <div class="mt-auto flex items-center text-base text-gray-500">
        {author && (
          <span class="mr-6">
            <span class="font-medium text-gray-700">{author}</span>
          </span>
        )}
        {formattedDate && (
          <time datetime={pubDate?.toISOString()}>
            {formattedDate}
          </time>
        )}
      </div>
    </div>
  </a>
</article>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
