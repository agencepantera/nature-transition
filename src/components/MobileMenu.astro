---
import type { NavItem } from '../config/navigation';

interface Props {
  items: NavItem[];
  currentPath: string;
}

const { items, currentPath } = Astro.props;
---

<div class="md:hidden hidden" id="mobile-menu">
  <div class="px-2 pt-2 pb-3 space-y-1">
    {items.map(({ href, label }) => (
      <a
        href={href}
        class={`block px-3 py-2 rounded-md text-base font-medium ${
          currentPath === href
            ? 'bg-green-700 text-white'
            : 'text-gray-700 hover:bg-green-50'
        }`}
      >
        {label}
      </a>
    ))}
  </div>
</div>

<button
  type="button"
  class="mobile-menu-button md:hidden inline-flex items-center justify-center p-2 rounded-md text-gray-700 hover:bg-green-50 focus:outline-none"
  aria-controls="mobile-menu"
  aria-expanded="false"
>
  <span class="sr-only">Ouvrir le menu</span>
  <svg
    class="h-6 w-6"
    xmlns="http://www.w3.org/2000/svg"
    fill="none"
    viewBox="0 0 24 24"
    stroke="currentColor"
  >
    <path
      stroke-linecap="round"
      stroke-linejoin="round"
      stroke-width="2"
      d="M4 6h16M4 12h16M4 18h16"
    />
  </svg>
</button>

<script>
  // Toggle menu mobile
  const mobileMenuButton = document.querySelector('.mobile-menu-button');
  const mobileMenu = document.querySelector('#mobile-menu');

  if (mobileMenuButton && mobileMenu) {
    mobileMenuButton.addEventListener('click', () => {
      mobileMenu.classList.toggle('hidden');
      const expanded = mobileMenuButton.getAttribute('aria-expanded') === 'true';
      mobileMenuButton.setAttribute('aria-expanded', (!expanded).toString());
    });
  }
</script>
